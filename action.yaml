#Still depends on triggering default gh deploy actions 
name: 'Zola Build & Push to Pages'
description: 'Build and push a Zola site to GitHub Pages '
author: 'Shaleen Jain'
branding:
  icon: 'zap'  
  color: 'green'
inputs:
  strategy:
    description: 'How far to take the deploy: dryrun, check, build, push'
    required: false
    default: 'push'
    type: choice
    options:
      - dryrun
      - check
      - build
      - push
  target-repository:
    description: Repository to push the html to
    required: false
    default: ${{github.repository}}
    type: string
  target-branch:
    description: Branch to push to
    required: false
    default: gh-pages
    type: string
  skip-check:
    description: Skip checking external links
    required: false
    default: false
    type: boolean
  check-flags:
    description: Flags for just zola check (it fails on some build flags)
    required: false
    default: ''
    type: string
  build-dir:
    description: Directory to run zola build in - root of the content site
    required: false
    default: '.'
    type: string
  build-flags:
    description: flags for check and build, eg --drafts --base-url
    required: false
    default: ''
    type: string
runs:
  using: 'composite'
  steps:
    - name: Output variables
      shell: bash
      run: |
        echo "GITHUB_REPOSITORY : $GITHUB_REPOSITORY"
        echo "strategy          : ${{ inputs.strategy }}"
        echo "target-repository : ${{ inputs.target-repository }}"
        echo "target-branch     : ${{ inputs.target-branch }}"
        echo "build-dir         : ${{ inputs.build-dir }}"
        echo "build-flags       : ${{ inputs.build-flags }}"
        echo "skip-check        : ${{ inputs.skip-check }}"
        echo "check-flags       : ${{ inputs.check-flags }}"
    - name: Checkout source repo
      if: inputs.strategy != 'dryrun'
      uses: actions/checkout@v4
      with:
        path: content
        submodules: recursive
    - name: Install zola
      if: inputs.strategy != 'dryrun'
      uses: taiki-e/install-action@zola
    - name: Run zola check
      shell: bash
      if: inputs.skip-check == false && inputs.strategy != 'dryrun'
      run: zola --root content/${{ inputs.build-dir }} check ${{ inputs.flags }}
    - name: Run zola build
      if: (inputs.strategy == 'build' || inputs.strategy == 'push')
      shell: bash
      run: zola --root content/${{ inputs.build-dir }} build --output-dir output ${{ inputs.flags }}
    - name: Checkout target repo
      if: inputs.strategy == 'push'
      uses: actions/checkout@v4
      with:
        path: tmp
        repository: ${{ inputs.target-repository }}
        ref: ${{ inputs.target-branch }}
        sparse-checkout: ''
    - name: Push files
      if: inputs.strategy == 'push'
      shell: bash
      run: |
        mv tmp/.git output/.git
        cd output
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add .
        git commit --allow-empty -m "Deploy ${{ github.repository }} to ${{ inputs.target-repository }}:${{ inputs.target-branch }}"
        git push
#git push --force "${remote_repo}" master:"${remote_branch}"
